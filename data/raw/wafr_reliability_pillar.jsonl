{"id": "wafr_reliability_pillar", "source": "https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/welcome.html", "content": "Reliability Pillar - AWS Well-Architected Framework\nPublication date: November 6, 2024 ( Document revisions )\nThe focus of this paper is the reliability pillar of the AWS Well-Architected Framework . It provides guidance to help customers apply best practices in the design, delivery, and maintenance of Amazon Web Services (AWS) environments.\nIntroduction\nThe AWS Well-Architected Framework helps you understand the pros and cons of decisions you make while building workloads on AWS. By using the Framework you will learn architectural best practices for designing and operating reliable, secure, efficient, cost-effective, and sustainable workloads in the cloud. It provides a way to consistently measure your architectures against best practices and identify areas for improvement. We believe that having well-architected workload greatly increases the likelihood of business success.\nThe AWS Well-Architected Framework is based on six pillars:\nOperational Excellence\nOperational Excellence\nSecurity\nSecurity\nReliability\nReliability\nPerformance Efficiency\nPerformance Efficiency\nCost Optimization\nCost Optimization\nSustainability\nSustainability\nThis paper focuses on the reliability pillar and how to apply it to your solutions. Achieving reliability can be challenging in traditional on-premises environments due to single points of failure, lack of automation, and lack of elasticity. By adopting the practices in this paper you will build architectures that have strong foundations, resilient architecture, consistent change management, and proven failure recovery processes.\nThis paper is intended for those in technology roles, such as chief technology officers (CTOs), architects, developers, and operations team members. After reading this paper, you will understand AWS best practices and strategies to use when designing cloud architectures for reliability. This paper includes high-level implementation details and architectural patterns, as well as references to additional resources.\nJavascript is disabled or is unavailable in your browser.\nTo use the Amazon Web Services Documentation, Javascript must be enabled. Please refer to your browser's Help pages for instructions.\nThanks for letting us know we're doing a good job!\nIf you've got a moment, please tell us what we did right so we can do more of it.\nThanks for letting us know this page needs work. We're sorry we let you down.\nIf you've got a moment, please tell us how we can make the documentation better."}
